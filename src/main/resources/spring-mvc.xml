<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，
      配置一些messageconverter。即解决了@Controller注解的使用前提配置。
      如果没有<mvc:annotation-driven/>，那么所有的Controller可能不会解析
      当有请求时候都没有匹配的处理请求类，就都去<mvc:default-servlet-handler/>即default servlet处理了。
      添加上<mvc:annotation-driven/>后，相应的do请求被Controller处理，而静态资源因为没有相应的Controller就会被default servlet处理。
      总之没有相应的Controller就会被default servlet处理就ok了。
      -->
    <mvc:annotation-driven/>

 <!--<mvc:interceptors>
     <mvc:interceptor>
         &lt;!&ndash;一级目录&ndash;&gt;
         <mvc:mapping path="/*.do"/>
         <mvc:mapping path="/*.html"/>
        &lt;!&ndash;二级目录&ndash;&gt;
         <mvc:mapping path="/*/*.do"/>
         <mvc:mapping path="/*/*.html"/>
         <bean id="myinterceptor" class="com.muly.interceptors.Myinterceptor"/>
     </mvc:interceptor>
 </mvc:interceptors>-->
    <!-- 拦截器 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* &ndash;&gt;
            <mvc:mapping path="/*/*.do" />
            <bean id="userAccessInterceptor"
                  class="com.muly.interceptors.UserAccessApiInterceptor">
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>-->



    <!--扫描静态资源-->
    <!--<mvc:resources mapping="/static/**" location="WEB-INF/static/"/>-->


    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.muly.controller"/>
</beans>